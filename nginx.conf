###you can uncomment next two lines for easy debug
###Warning: if master_process is off, there will be only one nginx worker running. Only use it for debug propose.

#daemon  off;

#master_process  off;

user  isp-owner;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    include mime.types;
    include conf.d/*.conf;
    default_type  application/octet-stream;

    client_max_body_size 1000M;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    shared_map balancing_shared_map hashmap?space=2m&entries=8096;

    jvm_path /usr/lib/jvm/jre/lib/amd64/server/libjvm.so;

    ### Set my app jars and resources, it must include nginx-clojure runtime jar,e.g. nginx-clojure-0.4.5.jar and
    ### for clojure user clojure runtime jar is also needed.
    ### See http://nginx-clojure.github.io/directives.html#jvm_classpath
    jvm_classpath "jars/nginx-clojure-0.4.5.jar:libs/*";

    ###jvm heap memory
    #jvm_options "-Xms1024m";
    #jvm_options "-Xmx1024m";

    #for enable java remote debug uncomment next two lines
    jvm_options "-Xdebug";
    jvm_options "-Xrunjdwp:server=y,transport=dt_socket,address=840#{pno},suspend=n";
    jvm_options "-XX:ErrorFile=/var/log/nginx/hs_err_pid%p.log";


    jvm_handler_type java;
    jvm_init_handler_name ru.isp.nginx.JvmInitHandler;
    #turn on coroutine mode
    #jvm_options "-javaagent:jars/nginx-clojure-0.4.5.jar=nmb";
    #jvm_classpath "coroutine-udfs:jars/nginx-clojure-0.4.5.jar:libs/*";

    #jvm_workers 100;

    #append nginx-clojure &  clojure runtime jars to jvm bootclasspath
    #for win32, class path seperator is ";", e.g "-Xbootclasspath/a:jars/nginx-clojure-0.2.7.jar;jars/clojure-1.5.1.jar"
    jvm_options "-Xbootclasspath/a:jars/nginx-clojure-0.4.5.jar";


    #copy the waving configuration file generated from previous step to you any classpath dir e.g. coroutine-udfs
    #setting user defined class waving configuration files which are in the above boot classpath, the seperator is ","
    jvm_options "-Dnginx.clojure.wave.udfs=my-wave-cfg.txt";

    # JAVA config service address
    jvm_options "-Dconfig.server.ip=http://isp2-config.isp.mobi:9001";
    jvm_options "-Dinstance.uuid=de31c10f-148a-45db-8fd1-ff144d0d14a8";
    jvm_options "-Dmodule.name=auth";

    # Only for mdm stage
    jvm_options "-Dmdm.adapter.event=mdm-api";
    jvm_options "-Disp.converter.event=converter";
    jvm_options "-Disp.file-storage.event=file-storage";
    ###threads number for request handler thread pool on jvm, default is 0.
    ###check more details from
    #jvm_workers 8;
}
